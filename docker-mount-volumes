#!/bin/python
###########################################################
# Mateusz Zoltak <mateusz.zoltak@oeaw.ac.at>
#
# Script generating pretty-named symlinks to docker
# containers volumes
###########################################################

import docker
import os
import re

dockerURL = 'unix://var/run/docker.sock'
rootBase  = '/srv/docker/'	# symlinks will be create at {rootBase}/{containerName}/{containerPath}
							# where {containerPath} will have '/' turned into '-'

###########################################################

rootBase = re.sub('/$', '', rootBase)

if not os.path.exists(rootBase):
  os.makedirs(rootBase)

host = docker.Client(base_url = dockerURL)
for container in host.containers():
  name = container['Id']
  if len(container['Names']) > 0: 
    name = re.sub('^/', '', container['Names'][0])
  name = name.replace('/', '-')
    
  print 'Creating symlinks for container ' + name 

  for guestPath, hostPath in host.inspect_container(container['Id'])['Volumes'].iteritems():
    print '\t' + guestPath + ':' + hostPath

    if not os.path.exists(rootBase + '/' + name):
      os.makedirs(rootBase + '/' + name)

    path = rootBase + '/' + name + '/' + re.sub('^/', '', guestPath).replace('/', '-')

    if os.path.islink(path):
      os.unlink(path)

    if not os.path.exists(path):
      os.symlink(hostPath, path)
    else: 
      print '\tcan not create symlink - file or directory with the same name already exists!'

