#!/bin/bash
# $1 env name
# $2 ServerName
# $3 ServerAlias
# $4 Port
# $5 Websockets, Authorization
# $6 SSL ("true"/"false"/"both")
# $7 InternalAlias
# $8 AllowEncodedSlashes Off|[On]|NoDecode (optional)
# $9 Additional ProxyPass options (e.g. nocanon) (optional)

PROT="http"
SSLPROXY=""
SSLHEADERS="RequestHeader set X-Forwarded-Proto \"https\" env=HTTPS
  RequestHeader set X-Forwarded-Port \"443\" env=HTTPS
  RequestHeader set Front-End-Https \"on\" env=HTTPS"
if [ "$6" == "both" ]; then
  PROT="https"
  SSLPROXY="SSLProxyEngine on
  SSLProxyVerify none
  SSLProxyCheckPeerCN off
  SSLProxyCheckPeerName off"
  SSLHEADERS=""
fi

if [ "$8x" == "x" ] ; then ALLOW_ENCODED_SLASHES="On" ; else ALLOW_ENCODED_SLASHES="$8"; fi

if [ "$6" == "true" ] || [ "$6" == "both" ] ; then
  # search for a specific certificate
  SSL_CONF="Include /etc/httpd/conf.d/shared/ssl.conf"
  CERT_DOMAIN=`echo $2 | sed -e 's/[.]/_/g'`
  CERT_FILE=`ls -1 /etc/pki/tls/certs | grep -P "^(star_)?${CERT_DOMAIN}.crt$"`
  KEY_FILE=`ls -1 /etc/pki/tls/private | grep -P "^(star_)?${CERT_DOMAIN}.key$"`
  if [ "$CERT_FILE" == "" ] || [ "$KEY_FILE" == "" ]; then
    # second chance - wildcard certificate for a subdomain
    CERT_DOMAIN=`echo $CERT_DOMAIN | sed -e 's/^[^_]+//'`
    CERT_FILE=`ls -1 /etc/pki/tls/certs | grep -P "^star_${CERT_DOMAIN}.crt$"`
    KEY_FILE=`ls -1 /etc/pki/tls/private | grep -P "^star_${CERT_DOMAIN}.key$"`
  fi
  if [ "$CERT_FILE" != "" ] && [ "$KEY_FILE" != "" ]; then
    SSL_CONF="
  Include /etc/httpd/conf.d/shared/ssl_without_certs.conf 
  SSLCertificateFile /etc/pki/tls/certs/$CERT_FILE
  SSLCertificateKeyFile /etc/pki/tls/private/$KEY_FILE"
  fi

  echo "<VirtualHost *:80>
  ServerName $2
  ServerAlias $3

  Redirect / https://$2/
</VirtualHost>
<VirtualHost *:443>
  ServerName $2
  ServerAlias $3

  Include /etc/httpd/conf.d/shared/error_pages.conf
  $SSL_CONF

  AllowEncodedSlashes $ALLOW_ENCODED_SLASHES

  ProxyPreserveHost On
  $SSLHEADERS
  $SSLPROXY
  $5
  ProxyPass        / $PROT://127.0.0.1:$4/$7 $9 timeout=3600
  ProxyPassReverse / $PROT://127.0.0.1:$4/$7
</VirtualHost>" > /etc/httpd/conf.d/sites-enabled/$1.conf
else
  echo "<VirtualHost *:80>
  ServerName $2
  ServerAlias $3

  Include /etc/httpd/conf.d/shared/error_pages.conf

  AllowEncodedSlashes $ALLOW_ENCODED_SLASHES

  ProxyPreserveHost On
  $5
  ProxyPass        / $PROT://127.0.0.1:$4/$7 $9 timeout=3600
  ProxyPassReverse / $PROT://127.0.0.1:$4/$7
</VirtualHost>" > /etc/httpd/conf.d/sites-enabled/$1.conf

fi
systemctl reload httpd
