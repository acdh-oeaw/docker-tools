#!/bin/bash

PREFIX="acdh"
IMG_DIR="/var/lib/docker/images"
BUILD_LOG="/var/log/docker-manage-build.log"
BACKUP_DIR="/mnt/nfs_data/901_backup/docker/`hostname`"
DAY=`date +%u`

# CLEAN
/usr/sbin/docker-remove-unused-containers all
/usr/sbin/docker-remove-unused-images

# BACKUP
tar -cf $BACKUP_DIR/${DAY}_config.json.tar /home/*/config.json
for i in `ls -1 /home/*/config.json`; do
	cd `dirname $i`
        username=`dirname $i`
        username=`basename $username`

        backupdirs=""
        for j in `cat $i | json_pp | grep '"DockerfileDir" : ' | sed -r -e 's/^ *"DockerfileDir" : "(.*)",?$/\1/'`; do
                backupdirs="$backupdirs $j"
        done
        if [ -n "$backupdirs" ]; then
                tarfile=${BACKUP_DIR}/${username}_DockerfileDirs_${DAY}.tar
		tar -czf $tarfile $backupdirs
                chmod 640 $tarfile
                chgrp $username $tarfile
	fi

        backupdirs=""
        for j in `cat $i | json_pp | grep '"BackupDir" : ' | sed -r -e 's/^ *"BackupDir" : "(.*)",?$/\1/'`; do
                backupdirs="$backupdirs $j"
        done
        if [ -n "$backupdirs" ]; then
                tarfile=${BACKUP_DIR}/${username}_BackupDirs_${DAY}.tar
		tar -czf $tarfile $backupdirs
                chmod 640 $tarfile
                chgrp $username $tarfile
	fi
done

# UPDATE
BUILD=0
for i in `docker images | grep -v '^<none>' | grep -v "^$PREFIX/" | sed -n '1!p' | awk '{print $1 ":" $2}'`; do
        RES=`docker pull $i | grep 'up to date'`
        if [ "$RES" = "" ]; then
        BUILD=1
        fi
done
if [ $BUILD = 1 ]; then
        echo "Building images after pull:" >> $BUILD_LOG
        /usr/sbin/docker-build-images $IMG_DIR &>>$BUILD_LOG
        echo "Rebuilding environments after build:" >> $BUILD_LOG
        docker-manage-admin -a build &>>$BUILD_LOG
fi

